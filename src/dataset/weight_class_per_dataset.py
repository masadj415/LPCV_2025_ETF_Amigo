import dataset.utils as dsutils
import torch

weight_per_class = {
    'airplane': (0.45, 0.45, 0.1, 0.0),
    'apple': (0.35, 0.55, 0.1, 0.0),
    'backpack': (0.4, 0.5, 0.1, 0.0),
    'banana': (0.4, 0.55, 0.05, 0.0),
    'bear'  : (0.45, 0.35, 0.15, 0.05),
    'bed': (0.2, 0.5, 0.3, 0.0),
    'bench': (0.3, 0.55, 0.15, 0.0),
    'bicycle': (0.45, 0.5, 0.05, 0.0),
    'bird'   : (0.55, 0.3, 0.1, 0.05),
    'boat': (0.45, 0.35, 0.2, 0.0),
    'book': (0.25, 0.6, 0.15, 0.0),
    'bottle': (0.45, 0.45, 0.1, 0.0),
    'bowl': (0.35, 0.5, 0.15, 0.0),
    'broccoli': (0.4, 0.59, 0.01, 0.0),
    'bus': (0.3, 0.5, 0.2, 0.0),
    'car': (0.4, 0.4, 0.2, 0.0),
    'cat': (0.5, 0.4, 0.1, 0.0),
    'cell_phone': (0.35, 0.45, 0.2, 0.0),
    'chair': (0.5, 0.4, 0.1, 0.0),
    'clock': (0.45, 0.45, 0.1, 0.0),
    'couch': (0.4, 0.4, 0.2, 0.0),
    'cow': (0.15, 0.7, 0.1, 0.05),
    'cup': (0.39, 0.6, 0.01, 0.0),
    'dining_table': (0.4, 0.4, 0.2, 0.0),
    'donut': (0.3, 0.5, 0.2, 0.0),
    'dog': (0.45, 0.45, 0.08, 0.02),
    'elephant': (0.45, 0.45, 0.07, 0.03),
    'hair_drier': (0.5, 0.2, 0.3, 0.0),
    'handbag': (0.35, 0.55, 0.07, 0.03),
    'horse': (0.15, 0.6, 0.22, 0.03),
    'hot_dog': (0.35, 0.6, 0.05, 0.0),
    'keyboard': (0.5, 0.45, 0.05, 0.0),
    'kite': (0.1, 0.75, 0.15, 0.0),
    'knife': (0.45, 0.45, 0.5, 0.0),
    'laptop': (0.45, 0.55, 0.0, 0.0),
    'microwave': (0.45, 0.45, 0.1, 0.0), # ostavljeno
    'motorcycle': (0.4, 0.5, 0.1, 0.0),
    'mouse': (0.5, 0.4, 0.1, 0.0),
    'orange': (0.4, 0.5, 0.09, 0.01),
    'oven': (0.4, 0.5, 0.1, 0.0),
    'parking_meter': (0.6, 0.3, 0.05, 0.0),
    'pizza': (0.45, 0.45, 0.1, 0.0),
    'potted_plant': (0.3, 0.45, 0.25, 0.0),
    'refrigerator': (0.45, 0.45, 0.1, 0.0),
    'remote': (0.55, 0.4, 0.05, 0.0),
    'sheep': (0.3, 0.68, 0.0, 0.02),
    'sink': (0.45, 0.45, 0.1, 0.0),
    'skis': (0.45, 0.5, 0.05, 0.0),
    'spoon': (0.6, 0.3, 0.1, 0.0),
    'sports_ball': (0.7, 0.2, 0.1, 0.0),
    'stop_sign': (0.4, 0.5, 0.1, 0.0),
    'teddy_bear': (0.35, 0.5, 0.15, 0.0),
    'tennis_racket': (0.35, 0.63, 0.02, 0.0),
    'tie': (0.4, 0.4, 0.2, 0.0),
    'toaster': (0.6, 0.3, 0.1, 0.0),
    'toilet' : (0.4, 0.4, 0.2, 0.0),
    'traffic_light': (0.5, 0.45, 0.05, 0.0),
    'train': (0.3, 0.4, 0.3, 0.0),
    'truck': (0.45, 0.4, 0.15, 0.0),
    'tv': (0.3, 0.5, 0.17, 0.03),
    'umbrella': (0.4, 0.55, 0.05, 0.0),
    'vase': (0.4, 0.5, 0.1, 0.0),
    'wine_glass': (0.4, 0.45, 0.15, 0.0),
    'zebra': (0.4, 0.5, 0.1, 0.0)
}

def get_class_matrix(class_names, class_dict):
    matrix = torch.tensor([class_dict[cls] for cls in class_names if cls in class_dict], device = "cuda", requires_grad=False)
    return matrix


CLASS_MATRIX = get_class_matrix(dsutils.CLASSES_IMAGENET ,weight_per_class)